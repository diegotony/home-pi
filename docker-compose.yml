version: "3.3"

x-user: &user
  user: 1000:1000 # default
 
x-environment: &environment
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=America/Guayaquil

x-policy: &policy
  restart: unless-stopped
x-security: &security
  security_opt:
    - no-new-privileges:true

x-network: &network
  networks:
    - home-network

networks:
  home-network:
    driver: bridge
  my-network:

services:
# Dashboard
  local:
    image: ghcr.io/benphelps/homepage:latest
    container_name: local
    # <<: *user 
    <<: *environment 
    <<: *policy 
    <<: *network 

    ports:
      - 80:3000
    volumes:
      - ${REPO_CONFIG_DIR}/configs:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
      - ${REPO_CONFIG_DIR}/images:/app/public/images
    labels:
      - homepage.group=Admin
      - homepage.name=Dashboard
      - homepage.container=local
      - homepage.server=my-docker
      - homepage.description=Me Dashboard
      - homepage.href=http://${IP_ADDRESS_G}
      - com.centurylinklabs.watchtower.enable=true

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    <<: *environment
    <<: *policy
    network_mode: 'host'
    ports:
      -  8096:8096/tcp
    volumes:
      - ${SERVER_DATA_DIR}/jellyfin/config:/config
      - ${SERVER_DATA_DIR}/jellyfin/cache:/cache
      - ${SERVER_STORAGE_DIR}:/media #optional
      - ${SERVER_DATA_DIR}/jellyfin/media2:/media2:ro
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional

    labels:
      - homepage.group=Streaming
      - homepage.name=Jellyfin
      - homepage.container=jellyfin
      - homepage.server=my-docker
      - homepage.description=Watch Media
      - homepage.href=http://${IP_ADDRESS_G}:8096
      - com.centurylinklabs.watchtower.enable=true

  komga:
    image: gotson/komga
    container_name: komga
    <<: *environment
    <<: *policy
    <<: *security
    <<: *network
    volumes:
      - ${SERVER_DATA_DIR}/komga/config:/config
      - ${SERVER_STORAGE_DIR}:/data
      # - /etc/timezone:/etc/timezone
    ports:
      - 8002:8080
    # user: "1000:1000"
    labels:
      - homepage.group=Streaming
      - homepage.name=Komga
      - homepage.container=komga
      - homepage.server=my-docker
      - homepage.description=Read Ebooks
      - homepage.href=http://${IP_ADDRESS_G}:8002
      - com.centurylinklabs.watchtower.enable=true

# Media Management

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    <<: *environment
    <<: *policy
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/bazarr/config:/config
      - ${SERVER_STORAGE_DIR}/movies:/movies #optional
      - ${SERVER_STORAGE_DIR}/tv:/tv #optional   
    ports:
      - 6001:6767
    labels:
      - homepage.group=Media Management
      - homepage.name=Bazarr
      - homepage.container=bazarr
      - homepage.server=my-docker
      - homepage.description=Download Subtitles
      - homepage.href=http://${IP_ADDRESS_G}:6001
      - com.centurylinklabs.watchtower.enable=true

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    <<: *environment
    <<: *policy
    <<: *security
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/overseerr/config:/config
      - ${SERVER_STORAGE_DIR}/movies:/movies #optional
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional
    ports:
      - 6002:7878
    labels:
      - homepage.group=Media Management
      - homepage.name=Radarr
      - homepage.container=radarr
      - homepage.server=my-docker
      - homepage.description=Download Movies
      - homepage.href=http://${IP_ADDRESS_G}:6002
      - com.centurylinklabs.watchtower.enable=true

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    <<: *environment
    <<: *policy
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/sonarr/config:/config
      - ${SERVER_STORAGE_DIR}/tv:/tv #optional
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional
    ports:
      - 6003:8989
    labels:
      - homepage.group=Media Management
      - homepage.name=Sonarr
      - homepage.container=sonarr
      - homepage.server=my-docker
      - homepage.description=Download Series
      - homepage.href=http://${IP_ADDRESS_G}:6003
      - com.centurylinklabs.watchtower.enable=true

# Indexers

  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - AUTO_UPDATE=true #optional
      - RUN_OPTS= #optional
    volumes:
      - ${SERVER_DATA_DIR}/jackett/config:/config
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional
    ports:
      - 7009:9117

    <<: *security
    <<: *network
    <<: *policy

    labels:
      - homepage.group=Media Management
      - homepage.name=jackett
      - homepage.container=jackett
      - homepage.server=my-docker
      - homepage.description=Indexers for Media
      - homepage.href=http://${IP_ADDRESS_G}:7009
      - com.centurylinklabs.watchtower.enable=true

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    <<: *environment
    <<: *policy
    <<: *security
    <<: *network 

    volumes:
      -  ${SERVER_DATA_DIR}/prowlarr/config:/config
    ports:
      - 7001:9696
    restart: unless-stopped
    labels:
      - homepage.group=Media Management
      - homepage.name=Prowlarr
      - homepage.container=prowlarr
      - homepage.server=my-docker
      - homepage.description=Indexers for Media
      - homepage.href=http://${IP_ADDRESS_G}:7001
      - com.centurylinklabs.watchtower.enable=true

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    <<: *environment 
    <<: *policy
    <<: *network 

    volumes:
      - ${SERVER_DATA_DIR}/transmission/config:/config
      - ${SERVER_STORAGE_DIR}/downloads:/downloads
      - ${SERVER_STORAGE_DIR}/watch:/watch
    ports:
      - 7003:9091
      - 51413:51413
      - 51413:51413/udp
    labels:
      - homepage.group=Media Management
      - homepage.name=Transmission
      - homepage.container=transmission
      - homepage.server=my-docker
      - homepage.description=Download Torrents
      - homepage.href=http://${IP_ADDRESS_G}:7003
      - com.centurylinklabs.watchtower.enable=true
  
  metube:
    image: alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ${SERVER_STORAGE_DIR}/downloads/youtube:/downloads
    labels:
      - homepage.group=Utils
      - homepage.name=Metube
      - homepage.container=metube
      - homepage.server=my-docker
      - homepage.description=Download Youtube
      - homepage.href=http://${IP_ADDRESS_G}:8081
      - com.centurylinklabs.watchtower.enable=true

# Server Admnin

  whoami:
    image: containous/whoami:latest
    container_name: whoami
    <<: *user 
    <<: *environment 
    <<: *policy 
    <<: *network 
    ports:
      - 9001:80
    labels:
      - homepage.group=Admin
      - homepage.name=Whoami
      - homepage.container=whoami
      - homepage.server=my-docker
      - homepage.description=Check InFormation
      - homepage.href=http://${IP_ADDRESS_G}:9001
      - com.centurylinklabs.watchtower.enable=true

  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    <<: *environment 
    <<: *policy
    <<: *security
    <<: *network 
    ports:
      - 8001:80
    volumes:
      - ${SERVER_STORAGE_DIR}:/srv
      - ${REPO_CONFIG_DIR}/assets/settings.json:/config/settings.json
      # - ${REPO_CONFIG_DIR}/assets/filebrowser.db:/database/filebrowser.db
    labels:
      - homepage.group=Utils
      - homepage.name=Filebrowser
      - homepage.container=filebrowser
      - homepage.server=my-docker
      - homepage.description=Explorer
      - homepage.href=http://${IP_ADDRESS_G}:8001
      - com.centurylinklabs.watchtower.enable=true

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok
    <<: *policy
    environment:
      - NGROK_AUTHTOKEN=${NGROK}
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
    volumes:
      - ${REPO_CONFIG_DIR}/configs/ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    labels:
      - homepage.group=Admin
      - homepage.name=Ngrok
      - homepage.container=ngrok
      - homepage.server=my-docker
      - homepage.description=Tunnel Administration
      - homepage.href=http://${IP_ADDRESS_G}:4040

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    environment:
      WATCHTOWER_LABEL_ENABLE: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - /root/.docker/config.json:/config.json
    <<: *policy 
    command: --interval 30 --debug true sonarr radarr bazarr firefox calibre metube transmission prowlarr komga jellyfin jackett
    labels:
      - homepage.group=Admin
      - homepage.name=WatchTower
      - homepage.container=watchtower
      - homepage.server=my-docker
      - homepage.description=Update Containers
      - homepage.href=http://${IP_ADDRESS_G}:9005
      - com.centurylinklabs.watchtower.enable=true

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8080:80/tcp"
    environment:
      TZ: America/Guayaquil
      DNSMASQ_LISTENING: "all"
      WEBPASSWORD: 'SECUREPASSWORD'
    volumes:
      - ${SERVER_DATA_DIR}/etc-pihole:/etc/pihole
      - ${SERVER_DATA_DIR}/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    labels:
      - homepage.group=Admin
      - homepage.name=Pihole
      - homepage.container=pihole
      - homepage.server=my-docker
      - homepage.description=pihole
      - homepage.href=http://${IP_ADDRESS_G}:8080/admin

  pi.alert:
    container_name: pialert
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=America/Guayaquil
      - PORT=8097
    network_mode: "host"
    restart: unless-stopped
    image: jokobsk/pi.alert:latest
    labels:
      - homepage.group=Admin
      - homepage.name=pialert
      - homepage.container=pialert
      - homepage.server=my-docker
      - homepage.description=pialert
      - homepage.href=http://${IP_ADDRESS_G}:8097

# Utils
  calibre:
    image:  lscr.io/linuxserver/calibre:latest
    container_name: calibre
    <<: *environment 
    <<: *policy
    <<: *network 
    ports:
      - 8004:8080
      - 8008:8081
    volumes:
      - ${SERVER_DATA_DIR}/calibre/config:/config
      - ${SERVER_STORAGE_DIR}/mybooks:/books
      - ${SERVER_STORAGE_DIR}/manga:/manga
      - ${SERVER_STORAGE_DIR}/comics:/comics
      - ${SERVER_STORAGE_DIR}/reduced-size:/reduced
    labels:
      - homepage.group=Utils
      - homepage.name=Calibre
      - homepage.container=calibre
      - homepage.server=my-docker
      - homepage.description=Management Books
      - homepage.href=http://${IP_ADDRESS_G}:8004
      - com.centurylinklabs.watchtower.enable=true
