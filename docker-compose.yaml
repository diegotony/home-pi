version: "3.3"

x-user: &user
  user: 1000:1000 # default
 
x-environment: &environment
  environment:
    # - INIT_ASSETS=0 # default
    - PUID=1000
    - PGID=1000
    - TZ=America/Guayaquil
    # - FILE__SECRET=/run/secrets/secret_file
    # - DOCKER_MODS=linuxserver/mods:universal-calibre #optional
    # - OAUTHLIB_RELAX_TOKEN_SCOPE=1 #optional

x-policy: &policy
  restart: unless-stopped

x-security: &security
  security_opt:
    - no-new-privileges:true

x-network: &network
  networks:
    - home-network

networks:
  home-network:
    driver: bridge
  my-network:

services:

# Dashboard

  local:
    image: ghcr.io/benphelps/homepage:latest
    container_name: local
    # <<: *user 
    <<: *environment 
    <<: *policy 
    <<: *network 

    ports:
      - 80:3000
    volumes:
      - ${REPO_CONFIG_DIR}/configs:/app/config # Make sure your local config directory exists
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
      - ${REPO_CONFIG_DIR}/images:/app/public/images
    labels:
      - homepage.group=Admin
      - homepage.name=Dashboard
      - homepage.container=local
      - homepage.server=my-docker
      - homepage.description=Me Dashboard
      - homepage.href=http://inverse.local
      - com.centurylinklabs.watchtower.enable=true

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    <<: *environment
    <<: *policy
    network_mode: 'host'
    ports:
      -  8096:8096/tcp
    volumes:
      - ${SERVER_DATA_DIR}/jellyfin/config:/config
      - ${SERVER_DATA_DIR}/jellyfin/cache:/cache
      - ${SERVER_STORAGE_DIR}:/media #optional
      - ${SERVER_DATA_DIR}/jellyfin/media2:/media2:ro
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional

    labels:
      - homepage.group=Streaming
      - homepage.name=Jellyfin
      - homepage.container=jellyfin
      - homepage.server=my-docker
      - homepage.description=Watch Media
      - homepage.href=http://inverse.local:8096
      - com.centurylinklabs.watchtower.enable=true

  komga:
    image: gotson/komga
    container_name: komga
    <<: *environment
    <<: *policy
    <<: *security
    <<: *network
    volumes:
      - ${SERVER_DATA_DIR}/komga/config:/config
      - ${SERVER_STORAGE_DIR}:/data
      # - /etc/timezone:/etc/timezone
    ports:
      - 8002:8080
    # user: "1000:1000"
    labels:
      - homepage.group=Streaming
      - homepage.name=Komga
      - homepage.container=komga
      - homepage.server=my-docker
      - homepage.description=Read Ebooks
      - homepage.href=http://inverse.local:8002
      - com.centurylinklabs.watchtower.enable=true

# Media Management

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    <<: *environment
    <<: *policy
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/bazarr/config:/config
      - ${SERVER_STORAGE_DIR}/movies:/movies #optional
      - ${SERVER_STORAGE_DIR}/tv:/tv #optional   
    ports:
      - 6001:6767
    labels:
      - homepage.group=Media Management
      - homepage.name=Bazarr
      - homepage.container=bazarr
      - homepage.server=my-docker
      - homepage.description=Download Subtitles
      - homepage.href=http://inverse.local:6001
      - com.centurylinklabs.watchtower.enable=true


  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    <<: *environment
    <<: *policy
    <<: *security
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/overseerr/config:/config
      - ${SERVER_STORAGE_DIR}/movies:/movies #optional
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional
    ports:
      - 6002:7878
    labels:
      - homepage.group=Media Management
      - homepage.name=Radarr
      - homepage.container=radarr
      - homepage.server=my-docker
      - homepage.description=Download Movies
      - homepage.href=http://inverse.local:6002
      - com.centurylinklabs.watchtower.enable=true

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    <<: *environment
    <<: *policy
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/sonarr/config:/config
      - ${SERVER_STORAGE_DIR}/tv:/tv #optional
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional
    ports:
      - 6003:8989
    labels:
      - homepage.group=Media Management
      - homepage.name=Sonarr
      - homepage.container=sonarr
      - homepage.server=my-docker
      - homepage.description=Download Series
      - homepage.href=http://inverse.local:6003
      - com.centurylinklabs.watchtower.enable=true

# Indexers

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
    <<: *environment
    <<: *policy
    <<: *security
    <<: *network 

    volumes:
      -  ${SERVER_DATA_DIR}/prowlarr/config:/config
    ports:
      - 7001:9696
    restart: unless-stopped
    labels:
      - homepage.group=Media Management
      - homepage.name=Prowlarr
      - homepage.container=prowlarr
      - homepage.server=my-docker
      - homepage.description=Indexers for Media
      - homepage.href=http://inverse.local:7001
      - com.centurylinklabs.watchtower.enable=true

  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    <<: *environment 
    <<: *policy
    <<: *network 

    volumes:
      - ${SERVER_DATA_DIR}/transmission/config:/config
      - ${SERVER_STORAGE_DIR}/downloads:/downloads
      - ${SERVER_STORAGE_DIR}/watch:/watch
    ports:
      - 7003:9091
      - 51413:51413
      - 51413:51413/udp
    labels:
      - homepage.group=Media Management
      - homepage.name=Transmission
      - homepage.container=transmission
      - homepage.server=my-docker
      - homepage.description=Download Torrents
      - homepage.href=http://inverse.local:7003
      - com.centurylinklabs.watchtower.enable=true
  
  metube:
    image: alexta69/metube
    container_name: metube
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ${SERVER_STORAGE_DIR}/downloads/youtube:/downloads
    labels:
      - homepage.group=Utils
      - homepage.name=Metube
      - homepage.container=metube
      - homepage.server=my-docker
      - homepage.description=Download Youtube
      - homepage.href=http://inverse.local:8081
      - com.centurylinklabs.watchtower.enable=true

# Server Admnin

  whoami:
    image: containous/whoami:latest
    container_name: whoami
    <<: *user 
    <<: *environment 
    <<: *policy 
    <<: *network 
    ports:
      - 9001:80
    labels:
      - homepage.group=Admin
      - homepage.name=Whoami
      - homepage.container=whoami
      - homepage.server=my-docker
      - homepage.description=Check InFormation
      - homepage.href=http://inverse.local:9001
      - com.centurylinklabs.watchtower.enable=true

  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    <<: *environment 
    <<: *policy
    <<: *security
    <<: *network 
    ports:
      - 8001:80
    volumes:
      - ${SERVER_STORAGE_DIR}:/srv
      - ${REPO_CONFIG_DIR}/assets/settings.json:/config/settings.json
      # - ${REPO_CONFIG_DIR}/assets/filebrowser.db:/database/filebrowser.db
    labels:
      - homepage.group=Utils
      - homepage.name=Filebrowser
      - homepage.container=filebrowser
      - homepage.server=my-docker
      - homepage.description=Explorer
      - homepage.href=http://inverse.local:8001
      - com.centurylinklabs.watchtower.enable=true

  kuma:
    container_name: kuma
    image: louislam/uptime-kuma:1
    <<: *environment 
    <<: *policy 
    <<: *network 
    volumes:
      -  ${SERVER_DATA_DIR}/uptime-kuma/config:/app/data
    ports:
      - "8005:3001"
    labels:
      - homepage.group=Utils
      - homepage.name=Kuma
      - homepage.container=kuma
      - homepage.server=my-docker
      - homepage.description=Check Status in Web Pages
      - homepage.href=http://inverse.local:8005
      - com.centurylinklabs.watchtower.enable=true

  yacht:
    image: selfhostedpro/yacht
    container_name: yacht
    ports:
      - 9004:8000
    volumes:
      - ${SERVER_DATA_DIR}/yacht/config:/config
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    <<: *environment
    <<: *network 
    <<: *policy 
    labels:
      - homepage.group=Admin
      - homepage.name=Yacht
      - homepage.container=yacht
      - homepage.server=my-docker
      - homepage.description=Docker Administration
      - homepage.href=http://inverse.local:9004
      - com.centurylinklabs.watchtower.enable=true


  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    hostname: watchtower
    environment:
      WATCHTOWER_LABEL_ENABLE: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - /root/.docker/config.json:/config.json
    <<: *policy 
    command: --interval 30 --debug true sonarr radarr bazarr firefox calibre metube transmission prowlarr komga jellyfin
    labels:
      - homepage.group=Admin
      - homepage.name=WatchTower
      - homepage.container=watchtower
      - homepage.server=my-docker
      - homepage.description=Update Containers
      - homepage.href=http://inverse.local:9005
      - com.centurylinklabs.watchtower.enable=true

# Utils

  calibre:
    image:  lscr.io/linuxserver/calibre:latest
    container_name: calibre
    <<: *environment 
    <<: *policy
    <<: *network 
    ports:
      - 8004:8080
      - 8008:8081
    volumes:
      - ${SERVER_DATA_DIR}/calibre/config:/config
      - ${SERVER_STORAGE_DIR}/mybooks:/books
      - ${SERVER_STORAGE_DIR}/manga:/manga
      - ${SERVER_STORAGE_DIR}/comics:/comics
      - ${SERVER_STORAGE_DIR}/reduced-size:/reduced
    labels:
      - homepage.group=Utils
      - homepage.name=Calibre
      - homepage.container=calibre
      - homepage.server=my-docker
      - homepage.description=Management Books
      - homepage.href=http://inverse.local:8004
      - com.centurylinklabs.watchtower.enable=true

  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    <<: *environment 
    <<: *policy 
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/firefox/config:/config
      - ${SERVER_STORAGE_DIR}/downloads:/downloads #optional
    shm_size: "2gb"
    ports:
      - 8009:3000
    labels:
      - homepage.group=Utils
      - homepage.name=Browser
      - homepage.container=firefox
      - homepage.server=my-docker
      - homepage.description=Provisional Browser
      - homepage.href=http://inverse.local:8009
      - com.centurylinklabs.watchtower.enable=true

  changedetection:
    image: lscr.io/linuxserver/changedetection.io:latest
    container_name: changedetection
    <<: *environment 
    <<: *policy 
    <<: *network 
    volumes:
      - ${SERVER_DATA_DIR}/changedetection/config:/config
    ports:
      - 8010:5000
    labels:
      - homepage.group=Utils
      - homepage.name=ChangeDetection
      - homepage.container=changedetection
      - homepage.server=my-docker
      - homepage.description=Check Changes in Websites
      - homepage.href=http://inverse.local:8010
      - com.centurylinklabs.watchtower.enable=true
